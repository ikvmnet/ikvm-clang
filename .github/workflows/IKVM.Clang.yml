name: IKVM.Clang

on:
  push:
    branches:
    - main
    - develop
  pull_request:
    branches:
    - main
    - develop

jobs:
  build:
    name: Build
    runs-on: windows-2022
    steps:
    - name: Checkout Source
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: recursive
    - name: Setup .NET 5.0
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 5.0.x
    - name: Setup .NET 6.0
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Setup .NET 7.0
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.15
      with:
        versionSpec: 5.x
    - name: Execute GitVersion
      uses: gittools/actions/gitversion/execute@v0.9.15
      with:
        useConfigFile: true
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1
    - name: Restore
      run: dotnet restore IKVM.Clang.sln
    - name: Build
      shell: pwsh
      run: |
        msbuild /m /bl `
          /p:Configuration="Release" `
          /p:Platform="Any CPU" `
          /p:Version=${env:GitVersion_FullSemVer} `
          /p:AssemblyVersion=${env:GitVersion_AssemblySemVer} `
          /p:InformationalVersion=${env:GitVersion_InformationalVersion} `
          /p:FileVersion=${env:GitVersion_AssemblySemFileVer} `
          /p:PackageVersion=${env:GitVersion_NuGetVersionV2} `
          /p:RepositoryUrl="${env:GITHUB_SERVER_URL}/${env:GITHUB_REPOSITORY}.git" `
          /p:PackageProjectUrl="${env:GITHUB_SERVER_URL}/${env:GITHUB_REPOSITORY}" `
          /p:BuildInParallel=true `
          /p:CreateHardLinksForAdditionalFilesIfPossible=true `
          /p:CreateHardLinksForCopyAdditionalFilesIfPossible=true `
          /p:CreateHardLinksForCopyFilesToOutputDirectoryIfPossible=true `
          /p:CreateHardLinksForCopyLocalIfPossible=true `
          /p:CreateHardLinksForPublishFilesIfPossible=true `
          /p:ContinuousIntegrationBuild=true `
          IKVM.Clang.dist.msbuildproj
    - name: Upload MSBuild Log
      if: ${{ always() }}
      uses: actions/upload-artifact@v3
      with:
        name: msbuild.binlog
        path: msbuild.binlog
    - name: Upload NuGet
      uses: actions/upload-artifact@v3
      with:
        name: nuget
        path: dist/nuget/
    - name: Upload VSTS
      uses: actions/upload-artifact@v3
      with:
        name: vsts
        path: dist/vsts/
    - name: Upload Tests
      uses: actions/upload-artifact@v3
      with:
        name: tests
        path: dist/tests/
  release:
    name: Release
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/heads/release/') || startsWith(github.ref, 'refs/heads/hotfix/')
    needs:
    - build
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout Source
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Setup .NET 7.0
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.15
      with:
        versionSpec: 5.x
    - name: Execute GitVersion
      id: GitVersion
      uses: gittools/actions/gitversion/execute@v0.9.15
      with:
        useConfigFile: true
    - name: Restore NuGet
      uses: actions/download-artifact@v3
      with:
        name: nuget
        path: dist/nuget
    - name: Restore VSTS
      uses: actions/download-artifact@v3
      with:
        name: vsts
        path: dist/vsts
    - name: Create Release
      if: github.ref == 'refs/heads/main' || github.event.head_commit.message == '+push'
      uses: ncipollo/release-action@v1.11.2
      with:
        tag: ${{ steps.GitVersion.outputs.semVer }}
        artifacts: dist/nuget/*.nupkg,dist/nuget/*.snupkg
        draft: false
        generateReleaseNotes: true
        prerelease: ${{ github.ref == 'refs/heads/develop' }}
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: Push NuGet (GitHub)
      shell: pwsh
      run: dotnet nuget push dist/nuget/*.nupkg --source $env:GITHUB_REPOS --api-key $env:GITHUB_TOKEN --skip-duplicate
      env:
        GITHUB_REPOS: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Push NuGet
      if: github.ref == 'refs/heads/main' || github.event.head_commit.message == '+push'
      shell: pwsh
      run: dotnet nuget push dist/nuget/*.nupkg --source $env:NUGET_REPOS --api-key $env:NUGET_TOKEN --skip-duplicate
      env:
        NUGET_REPOS: https://api.nuget.org/v3/index.json
        NUGET_TOKEN: ${{ secrets.NUGET_TOKEN }}
